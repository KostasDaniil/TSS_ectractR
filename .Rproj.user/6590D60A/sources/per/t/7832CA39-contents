library(devtools)
install_github("omarwagih/ggseqlogo")

library(Biostrings)
library(stringr)
library(ggplot2)
library(scales)
library(dplyr)
library(ggseqlogo)
library(esquisse)

ggplot(TSSfinal) +
 aes(x = start, y = strand, colour = X.1.1) +
 geom_jitter(size = 1.2) +
 scale_color_hue(direction = 1) +
 ggthemes::theme_pander() +
 facet_wrap(vars(PP))
library(ggplot2)


# Assign Variables
left <- 40
right <- 10

left <- 1
right <- 0

# Read Reference Genome
refGenome <- readDNAStringSet('data/U00096.2.fasta')[[1]]

# Calculate Nucleotide Frequencies (-40 to +10)
TSSarea <- data.frame()
for (i in seq_len(nrow(TSSfinal))) {
  if (TSSfinal$strand[i] == "+") {
    if (TSSfinal$start[i] - left < 0) {
      next
    }
    TSSarea <- rbind(TSSarea, str_flatten(refGenome[(TSSfinal$start[i] - left):(TSSfinal$start[i] + right)]))
  } else if (TSSfinal$strand[i] == "-") {
    if (TSSfinal$start[i] - right < 0) {
      next
    }
    TSSarea <- rbind(TSSarea, 
          toString(reverseComplement(DNAString(x = str_flatten(refGenome[(TSSfinal$start[i] - right):(TSSfinal$start[i] + left)])))))
  }
}

colnames(TSSarea) <- "Area"

TSSfinal$"+1-1" <- TSSarea$Area

ggplot() + geom_logo(TSSarea) + theme_logo() + xlab("Position") + ggtitle(paste("Escherichia Coli (n=", nrow(TSSarea), ")", sep = "")) +
  scale_x_continuous(limit = c(3, 44), breaks = c(6, 11, 21, 31, 41), labels = c("-35", "-30", "-20", "-10", "+1")) +
  scale_y_continuous(limit = c(0, 0.31)) + theme_bw() + theme(axis.line = element_line(color = "black"), 
                                                              plot.title = element_text(hjust = 0.5, face = "bold"),
                                                              axis.text = element_text(color = "black")) +
  geom_vline(xintercept = 40.5, linetype = 2)


# Calculate DiNucleotide Frequencies (-1 to +1)
TSS_2nt <- data.frame()
for (i in 1:nrow(TSSfinal)) {
  if (TSSfinal$strand[i] == "+") {
    TSS_2nt <- rbind(TSS_2nt, str_flatten(refGenome[(TSSfinal$start[i] - 1):(TSSfinal$start[i])]))
  } else if (TSSfinal$strand[i] == "-") {
    TSS_2nt <- rbind(TSS_2nt, 
                     toString(reverseComplement(DNAString(x = str_flatten(refGenome[(TSSfinal$start[i]):(TSSfinal$start[i] + 1)])))))
  }
}

TSS_2nt <- as.data.frame(table(TSS_2nt))
colnames(TSS_2nt) <- c("dinucleotides", "counts")

sumCounts <- sum(TSS_2nt$counts)
TSS_2nt$Freq <- TSS_2nt$counts/sumCounts


# Create Manhattan plot +1 to -1 nts
library(plotly)

prepare <- TSSfinal %>% group_by(X.1.1) %>% summarise(center = as.double((max(start) + min(start))/2))

ggplot(TSSfinal, aes(y = RRS.x, x = X.1.1)) + xlab("Position") + ggtitle("Escherichia Coli") +
  geom_point(aes(color = as.factor(X.1.1)), size = 0.7) + theme_bw() +
  scale_x_discrete(labels = prepare$X.1.1 , breaks = prepare$center) + scale_y_continuous(limit = c(0, 4000), expand = c(0,0))

manhattan.plot(TSSfinal$X.1.1, TSSfinal$start, TSSfinal$RRS.x, pch=20, cex=0.7, ylim=c(0, 80), col = "deeppink3")


ggplot(TSSfinal) +
 aes(x = X.1.1, y = RRS.x, group = start) +
 geom_boxplot(fill = "#B90A81") +
 theme_minimal() +
 ylim(0, 80)

sum((dataset$V1*dataset$V2))/sum(dataset$V2)

devtools::install_github("cardiomoon/webr")
library(webr)



PieDonut(TSSfinal, aes(PP, strand), showPieName = F,
         r0 = 0.5, selected = c(2, 4, 6, 8), explodeDonut = 1, 
         donutLabelSize = 8, pieLabelSize = 8, start=pi/16,
         labelposition = 3, family = "serif")


PieDonut(TSSfinal, aes(strand, PP), r0 = 0.5, selected = c(1, 3, 5, 7), 
         explodeDonut = 1, donutLabelSize = 6, pieLabelSize = 6, start=pi/16, 
         titlesize = 9, labelposition = 3, family = "serif")


ggplot(TSSfinal, aes(x = strand, fill = PP, color = strand)) +
  geom_bar(size=0.7) +
  scale_color_manual(values=c("red", "blue")) +
  scale_fill_viridis_d() + ggtitle("GG") + 
  theme_void() + coord_polar(theta = "y")


ggplot(TSSfinal) +
 aes(x = strand, y = start, colour = X.1.1) +
 geom_jitter(size = 0.9, shape = 16) + 
 labs(title = "Binucleotides per Strand", color = "Binucleotides\nCombinations") +
 ggthemes::theme_pander() +   # ggthemes::theme_gdocs()
 theme(plot.title = element_text(size = 20L, face = "bold", hjust = 0.5, family = "serif"),
       plot.caption = element_text(hjust = 0.5, family = "serif"), 
       axis.title.y = element_text(size = 17L, family = "serif"),
       axis.title.x = element_text(size = 17L, family = "serif"),
       axis.text.x = element_text(size = 15L, face = "bold"),
       axis.text.y = element_text(size = 13L, face = "bold", margin = margin(10, 10, 10, 10), family = "serif"),
       legend.title = element_text(size = 15L, family = "serif"),
       legend.text = element_text(size = 13L),
       strip.text.x = element_text(size = 15L, face = "bold")) +
  guides(color = guide_legend(override.aes = list(size = 3))) + 
  scale_x_discrete(limits=c("+", "-")) + 
  scale_y_continuous(labels = unit_format(unit = "", scale = 1 / 1e+06, accuracy = 1)) + 
  labs(x = "Strand [Sense (+) / antisense (-)]", 
       y = expression(Genome~Position~(x10^6~nts))) + facet_wrap(vars(PP))


install.packages("ggpubr")
library(ggpubr)

gc <- data.frame(species = c("A_baumannii", "A_macleodii", "B_amyloliquefaciens", 
                             "B_animalis", "B_cereus", "B_longum", "B_subtilis", 
                             "B_thruringiensis", "Brucella_spp", "C_botulinum", 
                             "C_diphtheria", "C_jejuni", "C_pseudotuberculosis", 
                             "C_psitacci", "C_trachomatis", "E_coli", "F_tularensis", 
                             "H_influenza", "H_pylori", "L_lactis", "L_monocytogenes", 
                             "L_pneumophila", "M_gallisepticum", "M_tuberculosis", 
                             "N_meningitidis", "P_acnes", "P_aeruginosa", "R_prowazekii", 
                             "S_aureus", "S_enterica", "S_islandicus", "S_pneumoniae", 
                             "S_pyogenes", "S_suis", "T_pallidum", "Y_pestis"), 
                 gc = c(40.19, 45.66, 47.28, 61.36, 36.25, 60.84, 44.71, 36.23, 58.36, 
                        29.48, 54.15, 31.05, 52.93, 39.76, 41.78, 51.79, 33.08, 38.97, 
                        39.64, 36.86, 38.66, 39.12, 32.65, 65.86, 53.09, 53.09, 66.96, 
                        30.58, 33.78, 53.34, 35.76, 40.73, 39.38, 42.11, 52.60, 48.92), 
                 kind = c("Gama-Proteobacteria", "Gama-Proteobacteria", "Firmicutes",
                          "Actinobacteria", "Firmicutes", "Actinobacteria", "Firmicutes",
                          "Firmicutes", "Alpha-Proteobacteria", "Firmicutes",
                          "Actinobacteria", "Epsilon-Proteobacteria", "Actinobacteria",
                          "Chlamydiae", "Chlamydiae", "Gama-Proteobacteria", "Gama-Proteobacteria",
                          "Gama-Proteobacteria", "Epsilon-Proteobacteria", "Firmicutes", "Firmicutes",
                          "Gama-Proteobacteria", "Tenericutes", "Actinobacteria", 
                          "Beta-Proteobacteria", "Actinobacteria", "Gama-Proteobacteria", "Alpha-Proteobacteria",
                          "Firmicutes", "Gama-Proteobacteria", "Archaea", "Firmicutes",
                          "Firmicutes", "Firmicutes", "Spirochaetes", "Gama-Proteobacteria"))

ggdotchart(gc, x = "species", y = "gc", color = "kind",
           sorting = "descending",
           rotate = T,
           group = "kind",
           dot.size = 6,
           label = round(gc$gc),
           font.label = list(color = "white", size = 10, vjust = 0.3),
           x.text.col = T) + theme_cleveland() +
  ggtitle("GC Content per Bacterial Kind") + 
  theme(plot.title = element_text(size = 20L, face = "bold", hjust = 0.5, family = "serif"),
                          axis.title.y = element_text(size = 17L, family = "serif", angle = 90),
                          axis.title.x = element_text(size = 17L, family = "serif"),
                          axis.text.x = element_text(size = 14L),
                          axis.text.y = element_text(size = 13L, face = "bold", family = "serif"),
                          legend.title = element_text(size = 15L, face = "bold"),
                          legend.text = element_text(size = 13L)) + 
  labs(y = "\nGC content (%)", x = "Bacterial Taxonomy")

